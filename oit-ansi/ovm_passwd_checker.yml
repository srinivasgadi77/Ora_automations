- hosts: all
  strategy: free
  gather_facts: false
#  serial: 400

  vars:
     log_file: /tmp/ovm_passwd_logs_"{{ tag }}".log
     #error_log: /tmp/eng_patch_logs_"{{ ldap +'_'+cr_num+'_'+tag}}"_error.log

  tasks:

  - name: Copying script
    copy:
      dest: /tmp/ovm_validate_password.py
      src:  /scratch/srgadi/script/ovm_validate_password.py 
      #src: /scratch/oit-ansi/scripts/eng_post_check_log2.py

  #Creating empty log files
  - local_action: command touch "{{ log_file }}"
  #- local_action: command touch "{{ error_log }}"


  - name: Executing  script
    shell: python /tmp/ovm_validate_password.py
    async: 1000
    poll: 0
    ignore_errors: yes
    register: yum_sleeper

  - name: 'Verify the job status'
    async_status: jid={{ yum_sleeper.ansible_job_id }}
    register: output
    until: output.finished
    retries: 30
    ignore_errors: true

  #- debug:
  #   msg: "=====> {{ output.failed}}
 #}}"

#  - name: Get hostname
#    shell: hostname -s
#    register: hst

  - name: facts
    set_fact:
       complt_res : "{{ inventory_hostname }} : {{ output.stdout_lines[-1]  if not output.failed else output.stderr_lines }}"

  - name: Recording to log
    local_action: lineinfile line={{ complt_res }} path="/tmp/ovm_passwd_logs_{{ tag }}.log"
#    when: 
#      output.failed == false or output.failed == False
#      "FAIL" not in output.stdout_lines[-1] 


#  - name: Failure entry
#    local_action: lineinfile line={{ complt_res }} path="/tmp/eng_patch_logs_{{ ldap +'_'+cr_num+'_'+tag}}_error.log"
#    when: 
#     output.failed == true or output.failed == True

  - debug:
     msg: "{{ complt_res }}"
